import turtle 


def draw_simple_fractal_tree(t, branch_length, level):
    """
    Малює  фрактал "дерево" за допомогою рекурсії.

    t (turtle.Turtle): Це наша "черепашка", яка малює.
    branch_length (float): Довжина поточної гілки.
    level (int): Скільки "поверхів" (рівнів) дерева ще потрібно намалювати.
    """

    # --- УМОВА ЗУПИНКИ РЕКУРСІЇ ---
    # Якщо рівень = 0, це означає, що ми досягли кінця "гілки",
    # тому далі малювати не треба. Просто виходимо з функції.
    if level == 0:
        return

    # --- МАЛЮВАННЯ ПОТОЧНОЇ ГІЛКИ ---
    t.pencolor("#800080") 
    t.pensize(max(1, level / 2)) # Товщина гілки: товстіша на нижніх рівнях, тонша на верхніх

    t.forward(branch_length) 

    # --- РЕКУРСИВНИЙ ВИКЛИК (МАЛЮВАННЯ НАСТУПНИХ ГІЛОК) ---

    # 1. Ліва гілка
    t.left(30) 
    # Викликаємо цю ж функцію знову для малювання лівої гілки:
    # - t: та сама черепашка
    # - branch_length * 0.7: гілка стає коротшою (70% від попередньої)
    # - level - 1: зменшуємо рівень, бо ми спускаємося на один "поверх" нижче
    draw_simple_fractal_tree(t, branch_length * 0.7, level - 1)

    # 2. Повертаємося назад (щоб намалювати праву гілку з тієї ж точки)
    t.right(60) # Повертаємо черепашку праворуч на 60 градусів (30 + 30)

    # 3. Права гілка
    # Викликаємо цю ж функцію знову для малювання правої гілки:
    # - t: та сама черепашка
    # - branch_length * 0.7: гілка знову коротшає
    # - level - 1: знову зменшуємо рівень
    draw_simple_fractal_tree(t, branch_length * 0.7, level - 1)

    # --- ПОВЕРНЕННЯ ЧЕРЕПАШКИ НАЗАД ---
    # Після того, як обидві гілки намальовані, нам потрібно повернути черепашку
    # у вихідну позицію та напрямок, звідки ми починали малювати цю гілку.
    t.left(30) # Повертаємо черепашку ліворуч на 30 градусів (щоб вирівнятись)
    t.backward(branch_length) # Рухаємося назад до початку поточної гілки


def setup_and_draw():
    """
    Налаштовує вікно для малювання та запускає процес малювання дерева.
    """
    screen = turtle.Screen()      # Створюємо вікно для малювання
    screen.setup(width=900, height=600) #  розмір вікна
    screen.bgcolor('white')   # Колір фону 
    screen.title("Фрактал-Дерево")

    my_turtle = turtle.Turtle()   
    my_turtle.speed("fastest")    
    my_turtle.hideturtle()        

    # Переміщуємо черепашку в початкову позицію (низ екрану, по центру)
    my_turtle.penup()             # Піднімаємо олівець, щоб не малювати під час переміщення
    my_turtle.goto(0, -250)       # Йдемо в точку X=0 (центр), Y=-250 (знизу)
    my_turtle.pendown()           # Опускаємо олівець, готові малювати
    my_turtle.setheading(90)      # Встановлюємо напрямок: 90 градусів = прямо вгору

    # --- ЗАПИТ У КОРИСТУВАЧА РІВЕНЬ РЕКУРСІЇ ---
   
    while True:
        try:
            level_input = screen.textinput("Рівень рекурсії", "Введіть рівень рекурсії (наприклад, 8). Більше 12 може бути повільно:")
            if level_input is None: # Якщо користувач натиснув "Скасувати"
                print("Малювання скасовано.")
                screen.bye() # Закриваємо вікно
                return

            recursion_level = int(level_input)
            if recursion_level < 0:
                print("Рівень не може бути від'ємним. Спробуйте ще раз.")
            elif recursion_level > 15: # Обмеження для уникнення занадто довгого малювання
                print("Рівень занадто високий для швидкого відображення. Максимум 15.")
            else:
                break 
        except ValueError:
            print("Будь ласка, введіть ЦІЛЕ ЧИСЛО.")

    # Починаємо малювати дерево!
    # Початкова довжина стовбура: 100 одиниць
    draw_simple_fractal_tree(my_turtle, 100, recursion_level)

    screen.mainloop() 

if __name__ == "__main__":
    setup_and_draw()